#ifndef SERPENT_LUA_H
#define SERPENT_LUA_H

static const char serpent_lua[] = {
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6e, 0x2c, 0x20, 0x76, 0x20, 0x3d, /* local n, v = */
	0x20, 0x22, 0x73, 0x65, 0x72, 0x70, 0x65, 0x6e, 0x74, 0x22, 0x2c, 0x20, /*  "serpent",  */
	0x22, 0x30, 0x2e, 0x33, 0x30, 0x33, 0x22, 0x20, 0x2d, 0x2d, 0x20, 0x28, /* "0.303" -- ( */
	0x43, 0x29, 0x20, 0x32, 0x30, 0x31, 0x32, 0x2d, 0x31, 0x38, 0x20, 0x50, /* C) 2012-18 P */
	0x61, 0x75, 0x6c, 0x20, 0x4b, 0x75, 0x6c, 0x63, 0x68, 0x65, 0x6e, 0x6b, /* aul Kulchenk */
	0x6f, 0x3b, 0x20, 0x4d, 0x49, 0x54, 0x20, 0x4c, 0x69, 0x63, 0x65, 0x6e, /* o; MIT Licen */
	0x73, 0x65, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x63, 0x2c, 0x20, /* se.local c,  */
	0x64, 0x20, 0x3d, 0x20, 0x22, 0x50, 0x61, 0x75, 0x6c, 0x20, 0x4b, 0x75, /* d = "Paul Ku */
	0x6c, 0x63, 0x68, 0x65, 0x6e, 0x6b, 0x6f, 0x22, 0x2c, 0x20, 0x22, 0x4c, /* lchenko", "L */
	0x75, 0x61, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, /* ua serialize */
	0x72, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x70, 0x72, 0x65, 0x74, 0x74, 0x79, /* r and pretty */
	0x20, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x22, 0x0a, 0x6c, 0x6f, /*  printer".lo */
	0x63, 0x61, 0x6c, 0x20, 0x73, 0x6e, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x7b, /* cal snum = { */
	0x5b, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x31, 0x2f, /* [tostring(1/ */
	0x30, 0x29, 0x5d, 0x3d, 0x27, 0x31, 0x2f, 0x30, 0x20, 0x2d, 0x2d, 0x5b, /* 0)]='1/0 --[ */
	0x5b, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x68, 0x75, 0x67, 0x65, 0x5d, 0x5d, /* [math.huge]] */
	0x27, 0x2c, 0x5b, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, /* ',[tostring( */
	0x2d, 0x31, 0x2f, 0x30, 0x29, 0x5d, 0x3d, 0x27, 0x2d, 0x31, 0x2f, 0x30, /* -1/0)]='-1/0 */
	0x20, 0x2d, 0x2d, 0x5b, 0x5b, 0x2d, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x68, /*  --[[-math.h */
	0x75, 0x67, 0x65, 0x5d, 0x5d, 0x27, 0x2c, 0x5b, 0x74, 0x6f, 0x73, 0x74, /* uge]]',[tost */
	0x72, 0x69, 0x6e, 0x67, 0x28, 0x30, 0x2f, 0x30, 0x29, 0x5d, 0x3d, 0x27, /* ring(0/0)]=' */
	0x30, 0x2f, 0x30, 0x27, 0x7d, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, /* 0/0'}.local  */
	0x62, 0x61, 0x64, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x20, 0x7b, 0x74, /* badtype = {t */
	0x68, 0x72, 0x65, 0x61, 0x64, 0x20, 0x3d, 0x20, 0x74, 0x72, 0x75, 0x65, /* hread = true */
	0x2c, 0x20, 0x75, 0x73, 0x65, 0x72, 0x64, 0x61, 0x74, 0x61, 0x20, 0x3d, /* , userdata = */
	0x20, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x20, 0x63, 0x64, 0x61, 0x74, 0x61, /*  true, cdata */
	0x20, 0x3d, 0x20, 0x74, 0x72, 0x75, 0x65, 0x7d, 0x0a, 0x6c, 0x6f, 0x63, /*  = true}.loc */
	0x61, 0x6c, 0x20, 0x67, 0x65, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x74, 0x61, /* al getmetata */
	0x62, 0x6c, 0x65, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x62, 0x75, 0x67, 0x20, /* ble = debug  */
	0x61, 0x6e, 0x64, 0x20, 0x64, 0x65, 0x62, 0x75, 0x67, 0x2e, 0x67, 0x65, /* and debug.ge */
	0x74, 0x6d, 0x65, 0x74, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x6f, /* tmetatable o */
	0x72, 0x20, 0x67, 0x65, 0x74, 0x6d, 0x65, 0x74, 0x61, 0x74, 0x61, 0x62, /* r getmetatab */
	0x6c, 0x65, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x70, 0x61, 0x69, /* le.local pai */
	0x72, 0x73, 0x20, 0x3d, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, /* rs = functio */
	0x6e, 0x28, 0x74, 0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, /* n(t) return  */
	0x6e, 0x65, 0x78, 0x74, 0x2c, 0x20, 0x74, 0x20, 0x65, 0x6e, 0x64, 0x20, /* next, t end  */
	0x2d, 0x2d, 0x20, 0x61, 0x76, 0x6f, 0x69, 0x64, 0x20, 0x75, 0x73, 0x69, /* -- avoid usi */
	0x6e, 0x67, 0x20, 0x5f, 0x5f, 0x70, 0x61, 0x69, 0x72, 0x73, 0x20, 0x69, /* ng __pairs i */
	0x6e, 0x20, 0x4c, 0x75, 0x61, 0x20, 0x35, 0x2e, 0x32, 0x2b, 0x0a, 0x6c, /* n Lua 5.2+.l */
	0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, /* ocal keyword */
	0x2c, 0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x2c, 0x20, 0x47, /* , globals, G */
	0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x2c, 0x20, 0x7b, 0x7d, 0x2c, 0x20, 0x28, /*  = {}, {}, ( */
	0x5f, 0x47, 0x20, 0x6f, 0x72, 0x20, 0x5f, 0x45, 0x4e, 0x56, 0x29, 0x0a, /* _G or _ENV). */
	0x66, 0x6f, 0x72, 0x20, 0x5f, 0x2c, 0x6b, 0x20, 0x69, 0x6e, 0x20, 0x69, /* for _,k in i */
	0x70, 0x61, 0x69, 0x72, 0x73, 0x28, 0x7b, 0x27, 0x61, 0x6e, 0x64, 0x27, /* pairs({'and' */
	0x2c, 0x20, 0x27, 0x62, 0x72, 0x65, 0x61, 0x6b, 0x27, 0x2c, 0x20, 0x27, /* , 'break', ' */
	0x64, 0x6f, 0x27, 0x2c, 0x20, 0x27, 0x65, 0x6c, 0x73, 0x65, 0x27, 0x2c, /* do', 'else', */
	0x20, 0x27, 0x65, 0x6c, 0x73, 0x65, 0x69, 0x66, 0x27, 0x2c, 0x20, 0x27, /*  'elseif', ' */
	0x65, 0x6e, 0x64, 0x27, 0x2c, 0x20, 0x27, 0x66, 0x61, 0x6c, 0x73, 0x65, /* end', 'false */
	0x27, 0x2c, 0x0a, 0x20, 0x20, 0x27, 0x66, 0x6f, 0x72, 0x27, 0x2c, 0x20, /* ',.  'for',  */
	0x27, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x27, 0x2c, 0x20, /* 'function',  */
	0x27, 0x67, 0x6f, 0x74, 0x6f, 0x27, 0x2c, 0x20, 0x27, 0x69, 0x66, 0x27, /* 'goto', 'if' */
	0x2c, 0x20, 0x27, 0x69, 0x6e, 0x27, 0x2c, 0x20, 0x27, 0x6c, 0x6f, 0x63, /* , 'in', 'loc */
	0x61, 0x6c, 0x27, 0x2c, 0x20, 0x27, 0x6e, 0x69, 0x6c, 0x27, 0x2c, 0x20, /* al', 'nil',  */
	0x27, 0x6e, 0x6f, 0x74, 0x27, 0x2c, 0x20, 0x27, 0x6f, 0x72, 0x27, 0x2c, /* 'not', 'or', */
	0x20, 0x27, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x27, 0x2c, 0x0a, 0x20, /*  'repeat',.  */
	0x20, 0x27, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x27, 0x2c, 0x20, 0x27, /*  'return', ' */
	0x74, 0x68, 0x65, 0x6e, 0x27, 0x2c, 0x20, 0x27, 0x74, 0x72, 0x75, 0x65, /* then', 'true */
	0x27, 0x2c, 0x20, 0x27, 0x75, 0x6e, 0x74, 0x69, 0x6c, 0x27, 0x2c, 0x20, /* ', 'until',  */
	0x27, 0x77, 0x68, 0x69, 0x6c, 0x65, 0x27, 0x7d, 0x29, 0x20, 0x64, 0x6f, /* 'while'}) do */
	0x20, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x5b, 0x6b, 0x5d, 0x20, /*  keyword[k]  */
	0x3d, 0x20, 0x74, 0x72, 0x75, 0x65, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x66, /* = true end.f */
	0x6f, 0x72, 0x20, 0x6b, 0x2c, 0x76, 0x20, 0x69, 0x6e, 0x20, 0x70, 0x61, /* or k,v in pa */
	0x69, 0x72, 0x73, 0x28, 0x47, 0x29, 0x20, 0x64, 0x6f, 0x20, 0x67, 0x6c, /* irs(G) do gl */
	0x6f, 0x62, 0x61, 0x6c, 0x73, 0x5b, 0x76, 0x5d, 0x20, 0x3d, 0x20, 0x6b, /* obals[v] = k */
	0x20, 0x65, 0x6e, 0x64, 0x20, 0x2d, 0x2d, 0x20, 0x62, 0x75, 0x69, 0x6c, /*  end -- buil */
	0x64, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x20, 0x74, 0x6f, 0x20, 0x6e, 0x61, /* d func to na */
	0x6d, 0x65, 0x20, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x0a, 0x66, /* me mapping.f */
	0x6f, 0x72, 0x20, 0x5f, 0x2c, 0x67, 0x20, 0x69, 0x6e, 0x20, 0x69, 0x70, /* or _,g in ip */
	0x61, 0x69, 0x72, 0x73, 0x28, 0x7b, 0x27, 0x63, 0x6f, 0x72, 0x6f, 0x75, /* airs({'corou */
	0x74, 0x69, 0x6e, 0x65, 0x27, 0x2c, 0x20, 0x27, 0x64, 0x65, 0x62, 0x75, /* tine', 'debu */
	0x67, 0x27, 0x2c, 0x20, 0x27, 0x69, 0x6f, 0x27, 0x2c, 0x20, 0x27, 0x6d, /* g', 'io', 'm */
	0x61, 0x74, 0x68, 0x27, 0x2c, 0x20, 0x27, 0x73, 0x74, 0x72, 0x69, 0x6e, /* ath', 'strin */
	0x67, 0x27, 0x2c, 0x20, 0x27, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x27, 0x2c, /* g', 'table', */
	0x20, 0x27, 0x6f, 0x73, 0x27, 0x7d, 0x29, 0x20, 0x64, 0x6f, 0x0a, 0x20, /*  'os'}) do.  */
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x6b, 0x2c, 0x76, 0x20, 0x69, 0x6e, 0x20, /*  for k,v in  */
	0x70, 0x61, 0x69, 0x72, 0x73, 0x28, 0x74, 0x79, 0x70, 0x65, 0x28, 0x47, /* pairs(type(G */
	0x5b, 0x67, 0x5d, 0x29, 0x20, 0x3d, 0x3d, 0x20, 0x27, 0x74, 0x61, 0x62, /* [g]) == 'tab */
	0x6c, 0x65, 0x27, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x47, 0x5b, 0x67, 0x5d, /* le' and G[g] */
	0x20, 0x6f, 0x72, 0x20, 0x7b, 0x7d, 0x29, 0x20, 0x64, 0x6f, 0x20, 0x67, /*  or {}) do g */
	0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x5b, 0x76, 0x5d, 0x20, 0x3d, 0x20, /* lobals[v] =  */
	0x67, 0x2e, 0x2e, 0x27, 0x2e, 0x27, 0x2e, 0x2e, 0x6b, 0x20, 0x65, 0x6e, /* g..'.'..k en */
	0x64, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, /* d end..local */
	0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x28, /*  function s( */
	0x74, 0x2c, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x29, 0x0a, 0x20, 0x20, 0x6c, /* t, opts).  l */
	0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x20, 0x69, /* ocal name, i */
	0x6e, 0x64, 0x65, 0x6e, 0x74, 0x2c, 0x20, 0x66, 0x61, 0x74, 0x61, 0x6c, /* ndent, fatal */
	0x2c, 0x20, 0x6d, 0x61, 0x78, 0x6e, 0x75, 0x6d, 0x20, 0x3d, 0x20, 0x6f, /* , maxnum = o */
	0x70, 0x74, 0x73, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x20, 0x6f, 0x70, /* pts.name, op */
	0x74, 0x73, 0x2e, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x2c, 0x20, 0x6f, /* ts.indent, o */
	0x70, 0x74, 0x73, 0x2e, 0x66, 0x61, 0x74, 0x61, 0x6c, 0x2c, 0x20, 0x6f, /* pts.fatal, o */
	0x70, 0x74, 0x73, 0x2e, 0x6d, 0x61, 0x78, 0x6e, 0x75, 0x6d, 0x0a, 0x20, /* pts.maxnum.  */
	0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, 0x70, 0x61, 0x72, 0x73, /*  local spars */
	0x65, 0x2c, 0x20, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2c, 0x20, 0x68, /* e, custom, h */
	0x75, 0x67, 0x65, 0x20, 0x3d, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x73, /* uge = opts.s */
	0x70, 0x61, 0x72, 0x73, 0x65, 0x2c, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, /* parse, opts. */
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x2c, 0x20, 0x6e, 0x6f, 0x74, 0x20, /* custom, not  */
	0x6f, 0x70, 0x74, 0x73, 0x2e, 0x6e, 0x6f, 0x68, 0x75, 0x67, 0x65, 0x0a, /* opts.nohuge. */
	0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, 0x70, 0x61, 0x63, /*   local spac */
	0x65, 0x2c, 0x20, 0x6d, 0x61, 0x78, 0x6c, 0x20, 0x3d, 0x20, 0x28, 0x6f, /* e, maxl = (o */
	0x70, 0x74, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, 0x74, 0x20, /* pts.compact  */
	0x61, 0x6e, 0x64, 0x20, 0x27, 0x27, 0x20, 0x6f, 0x72, 0x20, 0x27, 0x20, /* and '' or '  */
	0x27, 0x29, 0x2c, 0x20, 0x28, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x6d, 0x61, /* '), (opts.ma */
	0x78, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x6f, 0x72, 0x20, 0x6d, 0x61, /* xlevel or ma */
	0x74, 0x68, 0x2e, 0x68, 0x75, 0x67, 0x65, 0x29, 0x0a, 0x20, 0x20, 0x6c, /* th.huge).  l */
	0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6d, 0x61, 0x78, 0x6c, 0x65, 0x6e, 0x2c, /* ocal maxlen, */
	0x20, 0x6d, 0x65, 0x74, 0x61, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, /*  metatostrin */
	0x67, 0x20, 0x3d, 0x20, 0x74, 0x6f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, /* g = tonumber */
	0x28, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x6d, 0x61, 0x78, 0x6c, 0x65, 0x6e, /* (opts.maxlen */
	0x67, 0x74, 0x68, 0x29, 0x2c, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x6d, /* gth), opts.m */
	0x65, 0x74, 0x61, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x0a, /* etatostring. */
	0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x69, 0x6e, 0x61, 0x6d, /*   local inam */
	0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x20, 0x3d, 0x20, 0x27, 0x5f, /* e, comm = '_ */
	0x27, 0x2e, 0x2e, 0x28, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x6f, 0x72, 0x20, /* '..(name or  */
	0x27, 0x27, 0x29, 0x2c, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x63, 0x6f, /* ''), opts.co */
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x28, 0x74, /* mment and (t */
	0x6f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x28, 0x6f, 0x70, 0x74, 0x73, /* onumber(opts */
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x29, 0x20, 0x6f, 0x72, /* .comment) or */
	0x20, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x68, 0x75, 0x67, 0x65, 0x29, 0x0a, /*  math.huge). */
	0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6e, 0x75, 0x6d, 0x66, /*   local numf */
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x3d, 0x20, 0x6f, 0x70, 0x74, 0x73, /* ormat = opts */
	0x2e, 0x6e, 0x75, 0x6d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x20, 0x6f, /* .numformat o */
	0x72, 0x20, 0x22, 0x25, 0x2e, 0x31, 0x37, 0x67, 0x22, 0x0a, 0x20, 0x20, /* r "%.17g".   */
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, 0x65, 0x65, 0x6e, 0x2c, 0x20, /* local seen,  */
	0x73, 0x72, 0x65, 0x66, 0x2c, 0x20, 0x73, 0x79, 0x6d, 0x73, 0x2c, 0x20, /* sref, syms,  */
	0x73, 0x79, 0x6d, 0x6e, 0x20, 0x3d, 0x20, 0x7b, 0x7d, 0x2c, 0x20, 0x7b, /* symn = {}, { */
	0x27, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x27, 0x2e, 0x2e, 0x69, 0x6e, /* 'local '..in */
	0x61, 0x6d, 0x65, 0x2e, 0x2e, 0x27, 0x3d, 0x7b, 0x7d, 0x27, 0x7d, 0x2c, /* ame..'={}'}, */
	0x20, 0x7b, 0x7d, 0x2c, 0x20, 0x30, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x63, /*  {}, 0.  loc */
	0x61, 0x6c, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, /* al function  */
	0x67, 0x65, 0x6e, 0x73, 0x79, 0x6d, 0x28, 0x76, 0x61, 0x6c, 0x29, 0x20, /* gensym(val)  */
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x27, 0x5f, 0x27, 0x2e, 0x2e, /* return '_'.. */
	0x28, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x74, 0x6f, /* (tostring(to */
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x76, 0x61, 0x6c, 0x29, 0x29, /* string(val)) */
	0x3a, 0x67, 0x73, 0x75, 0x62, 0x28, 0x22, 0x5b, 0x5e, 0x25, 0x77, 0x5d, /* :gsub("[^%w] */
	0x22, 0x2c, 0x22, 0x22, 0x29, 0x3a, 0x67, 0x73, 0x75, 0x62, 0x28, 0x22, /* ",""):gsub(" */
	0x28, 0x25, 0x64, 0x25, 0x77, 0x2b, 0x29, 0x22, 0x2c, 0x0a, 0x20, 0x20, /* (%d%w+)",.   */
	0x20, 0x20, 0x2d, 0x2d, 0x20, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, /*   -- tostrin */
	0x67, 0x28, 0x76, 0x61, 0x6c, 0x29, 0x20, 0x69, 0x73, 0x20, 0x6e, 0x65, /* g(val) is ne */
	0x65, 0x64, 0x65, 0x64, 0x20, 0x62, 0x65, 0x63, 0x61, 0x75, 0x73, 0x65, /* eded because */
	0x20, 0x5f, 0x5f, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, /*  __tostring  */
	0x6d, 0x61, 0x79, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x61, /* may return a */
	0x20, 0x6e, 0x6f, 0x6e, 0x2d, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, /*  non-string  */
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x66, 0x75, /* value.    fu */
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x73, 0x29, 0x20, 0x69, 0x66, /* nction(s) if */
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, 0x79, 0x6d, 0x73, 0x5b, 0x73, 0x5d, /*  not syms[s] */
	0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x73, 0x79, 0x6d, 0x6e, 0x20, 0x3d, /*  then symn = */
	0x20, 0x73, 0x79, 0x6d, 0x6e, 0x2b, 0x31, 0x3b, 0x20, 0x73, 0x79, 0x6d, /*  symn+1; sym */
	0x73, 0x5b, 0x73, 0x5d, 0x20, 0x3d, 0x20, 0x73, 0x79, 0x6d, 0x6e, 0x20, /* s[s] = symn  */
	0x65, 0x6e, 0x64, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, /* end return t */
	0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x73, 0x79, 0x6d, 0x73, /* ostring(syms */
	0x5b, 0x73, 0x5d, 0x29, 0x20, 0x65, 0x6e, 0x64, 0x29, 0x29, 0x20, 0x65, /* [s]) end)) e */
	0x6e, 0x64, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x66, /* nd.  local f */
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x61, 0x66, 0x65, /* unction safe */
	0x73, 0x74, 0x72, 0x28, 0x73, 0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, /* str(s) retur */
	0x6e, 0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 0x29, 0x20, 0x3d, 0x3d, /* n type(s) == */
	0x20, 0x22, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x20, 0x61, 0x6e, /*  "number" an */
	0x64, 0x20, 0x28, 0x68, 0x75, 0x67, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, /* d (huge and  */
	0x73, 0x6e, 0x75, 0x6d, 0x5b, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, /* snum[tostrin */
	0x67, 0x28, 0x73, 0x29, 0x5d, 0x20, 0x6f, 0x72, 0x20, 0x6e, 0x75, 0x6d, /* g(s)] or num */
	0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x66, 0x6f, 0x72, 0x6d, 0x61, /* format:forma */
	0x74, 0x28, 0x73, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x72, /* t(s)).    or */
	0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 0x29, 0x20, 0x7e, 0x3d, 0x20, /*  type(s) ~=  */
	0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x20, 0x61, 0x6e, 0x64, /* "string" and */
	0x20, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x73, 0x29, /*  tostring(s) */
	0x20, 0x2d, 0x2d, 0x20, 0x65, 0x73, 0x63, 0x61, 0x70, 0x65, 0x20, 0x4e, /*  -- escape N */
	0x45, 0x57, 0x4c, 0x49, 0x4e, 0x45, 0x2f, 0x30, 0x31, 0x30, 0x20, 0x61, /* EWLINE/010 a */
	0x6e, 0x64, 0x20, 0x45, 0x4f, 0x46, 0x2f, 0x30, 0x32, 0x36, 0x0a, 0x20, /* nd EOF/026.  */
	0x20, 0x20, 0x20, 0x6f, 0x72, 0x20, 0x28, 0x22, 0x25, 0x71, 0x22, 0x29, /*    or ("%q") */
	0x3a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x28, 0x73, 0x29, 0x3a, 0x67, /* :format(s):g */
	0x73, 0x75, 0x62, 0x28, 0x22, 0x5c, 0x30, 0x31, 0x30, 0x22, 0x2c, 0x22, /* sub("\010"," */
	0x6e, 0x22, 0x29, 0x3a, 0x67, 0x73, 0x75, 0x62, 0x28, 0x22, 0x5c, 0x30, /* n"):gsub("\0 */
	0x32, 0x36, 0x22, 0x2c, 0x22, 0x5c, 0x5c, 0x30, 0x32, 0x36, 0x22, 0x29, /* 26","\\026") */
	0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x2d, 0x2d, 0x20, 0x68, 0x61, /*  end.  -- ha */
	0x6e, 0x64, 0x6c, 0x65, 0x20, 0x72, 0x61, 0x64, 0x69, 0x78, 0x20, 0x63, /* ndle radix c */
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x20, 0x69, 0x6e, 0x20, 0x73, 0x6f, /* hanges in so */
	0x6d, 0x65, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x73, 0x0a, 0x20, /* me locales.  */
	0x20, 0x69, 0x66, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x66, 0x69, 0x78, /*  if opts.fix */
	0x72, 0x61, 0x64, 0x69, 0x78, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x28, 0x22, /* radix and (" */
	0x2e, 0x31, 0x66, 0x22, 0x29, 0x3a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, /* .1f"):format */
	0x28, 0x31, 0x2e, 0x32, 0x29, 0x20, 0x7e, 0x3d, 0x20, 0x22, 0x31, 0x2e, /* (1.2) ~= "1. */
	0x32, 0x22, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x20, /* 2" then.     */
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6f, 0x72, 0x69, 0x67, 0x73, 0x61, /* local origsa */
	0x66, 0x65, 0x73, 0x74, 0x72, 0x20, 0x3d, 0x20, 0x73, 0x61, 0x66, 0x65, /* festr = safe */
	0x73, 0x74, 0x72, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x73, 0x61, 0x66, 0x65, /* str.    safe */
	0x73, 0x74, 0x72, 0x20, 0x3d, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, /* str = functi */
	0x6f, 0x6e, 0x28, 0x73, 0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, /* on(s) return */
	0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x73, 0x29, 0x20, 0x3d, 0x3d, 0x20, /*  type(s) ==  */
	0x22, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x0a, 0x20, 0x20, 0x20, /* "number".    */
	0x20, 0x20, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x28, 0x6e, 0x6f, 0x68, 0x75, /*    and (nohu */
	0x67, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, 0x6e, 0x75, 0x6d, 0x5b, /* ge and snum[ */
	0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x73, 0x29, 0x5d, /* tostring(s)] */
	0x20, 0x6f, 0x72, 0x20, 0x6e, 0x75, 0x6d, 0x66, 0x6f, 0x72, 0x6d, 0x61, /*  or numforma */
	0x74, 0x3a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x28, 0x73, 0x29, 0x3a, /* t:format(s): */
	0x67, 0x73, 0x75, 0x62, 0x28, 0x22, 0x2c, 0x22, 0x2c, 0x22, 0x2e, 0x22, /* gsub(",","." */
	0x29, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x72, 0x69, 0x67, 0x73, 0x61, /* )) or origsa */
	0x66, 0x65, 0x73, 0x74, 0x72, 0x28, 0x73, 0x29, 0x0a, 0x20, 0x20, 0x20, /* festr(s).    */
	0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, /*  end.  end.  */
	0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, /*  local funct */
	0x69, 0x6f, 0x6e, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x28, /* ion comment( */
	0x73, 0x2c, 0x6c, 0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, /* s,l) return  */
	0x63, 0x6f, 0x6d, 0x6d, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x28, 0x6c, 0x20, /* comm and (l  */
	0x6f, 0x72, 0x20, 0x30, 0x29, 0x20, 0x3c, 0x20, 0x63, 0x6f, 0x6d, 0x6d, /* or 0) < comm */
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x27, 0x20, 0x2d, 0x2d, 0x5b, 0x5b, 0x27, /*  and ' --[[' */
	0x2e, 0x2e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x28, 0x32, 0x2c, 0x20, /* ..select(2,  */
	0x70, 0x63, 0x61, 0x6c, 0x6c, 0x28, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, /* pcall(tostri */
	0x6e, 0x67, 0x2c, 0x20, 0x73, 0x29, 0x29, 0x2e, 0x2e, 0x27, 0x5d, 0x5d, /* ng, s))..']] */
	0x27, 0x20, 0x6f, 0x72, 0x20, 0x27, 0x27, 0x20, 0x65, 0x6e, 0x64, 0x0a, /* ' or '' end. */
	0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x75, 0x6e, 0x63, /*   local func */
	0x74, 0x69, 0x6f, 0x6e, 0x20, 0x67, 0x6c, 0x6f, 0x62, 0x65, 0x72, 0x72, /* tion globerr */
	0x28, 0x73, 0x2c, 0x6c, 0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, /* (s,l) return */
	0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x5b, 0x73, 0x5d, 0x20, /*  globals[s]  */
	0x61, 0x6e, 0x64, 0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, 0x73, 0x5b, /* and globals[ */
	0x73, 0x5d, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x28, /* s]..comment( */
	0x73, 0x2c, 0x6c, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x6e, 0x6f, 0x74, 0x20, /* s,l) or not  */
	0x66, 0x61, 0x74, 0x61, 0x6c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x61, 0x6e, /* fatal.    an */
	0x64, 0x20, 0x73, 0x61, 0x66, 0x65, 0x73, 0x74, 0x72, 0x28, 0x73, 0x65, /* d safestr(se */
	0x6c, 0x65, 0x63, 0x74, 0x28, 0x32, 0x2c, 0x20, 0x70, 0x63, 0x61, 0x6c, /* lect(2, pcal */
	0x6c, 0x28, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x2c, 0x20, /* l(tostring,  */
	0x73, 0x29, 0x29, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x65, 0x72, 0x72, 0x6f, /* s))) or erro */
	0x72, 0x28, 0x22, 0x43, 0x61, 0x6e, 0x27, 0x74, 0x20, 0x73, 0x65, 0x72, /* r("Can't ser */
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x20, 0x22, 0x2e, 0x2e, 0x74, 0x6f, /* ialize "..to */
	0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x73, 0x29, 0x29, 0x20, 0x65, /* string(s)) e */
	0x6e, 0x64, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x66, /* nd.  local f */
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x73, 0x61, 0x66, 0x65, /* unction safe */
	0x6e, 0x61, 0x6d, 0x65, 0x28, 0x70, 0x61, 0x74, 0x68, 0x2c, 0x20, 0x6e, /* name(path, n */
	0x61, 0x6d, 0x65, 0x29, 0x20, 0x2d, 0x2d, 0x20, 0x67, 0x65, 0x6e, 0x65, /* ame) -- gene */
	0x72, 0x61, 0x74, 0x65, 0x73, 0x20, 0x66, 0x6f, 0x6f, 0x2e, 0x62, 0x61, /* rates foo.ba */
	0x72, 0x2c, 0x20, 0x66, 0x6f, 0x6f, 0x5b, 0x33, 0x5d, 0x2c, 0x20, 0x6f, /* r, foo[3], o */
	0x72, 0x20, 0x66, 0x6f, 0x6f, 0x5b, 0x27, 0x62, 0x20, 0x61, 0x20, 0x72, /* r foo['b a r */
	0x27, 0x5d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, /* '].    local */
	0x20, 0x6e, 0x20, 0x3d, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x3d, /*  n = name == */
	0x20, 0x6e, 0x69, 0x6c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x27, 0x27, 0x20, /*  nil and ''  */
	0x6f, 0x72, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, /* or name.     */
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x20, /* local plain  */
	0x3d, 0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x6e, 0x29, 0x20, 0x3d, 0x3d, /* = type(n) == */
	0x20, 0x22, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x20, 0x61, 0x6e, /*  "string" an */
	0x64, 0x20, 0x6e, 0x3a, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x28, 0x22, 0x5e, /* d n:match("^ */
	0x5b, 0x25, 0x6c, 0x25, 0x75, 0x5f, 0x5d, 0x5b, 0x25, 0x77, 0x5f, 0x5d, /* [%l%u_][%w_] */
	0x2a, 0x24, 0x22, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x6f, 0x74, /* *$") and not */
	0x20, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x5b, 0x6e, 0x5d, 0x0a, /*  keyword[n]. */
	0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, 0x61, /*     local sa */
	0x66, 0x65, 0x20, 0x3d, 0x20, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x20, 0x61, /* fe = plain a */
	0x6e, 0x64, 0x20, 0x6e, 0x20, 0x6f, 0x72, 0x20, 0x27, 0x5b, 0x27, 0x2e, /* nd n or '['. */
	0x2e, 0x73, 0x61, 0x66, 0x65, 0x73, 0x74, 0x72, 0x28, 0x6e, 0x29, 0x2e, /* .safestr(n). */
	0x2e, 0x27, 0x5d, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, /* .']'.    ret */
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x70, 0x61, 0x74, 0x68, 0x20, 0x6f, 0x72, /* urn (path or */
	0x20, 0x27, 0x27, 0x29, 0x2e, 0x2e, 0x28, 0x70, 0x6c, 0x61, 0x69, 0x6e, /*  '')..(plain */
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x70, 0x61, 0x74, 0x68, 0x20, 0x61, 0x6e, /*  and path an */
	0x64, 0x20, 0x27, 0x2e, 0x27, 0x20, 0x6f, 0x72, 0x20, 0x27, 0x27, 0x29, /* d '.' or '') */
	0x2e, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x2c, 0x20, 0x73, 0x61, 0x66, 0x65, /* ..safe, safe */
	0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, /*  end.  local */
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x6e, 0x75, 0x6d, 0x73, 0x6f, 0x72, /*  alphanumsor */
	0x74, 0x20, 0x3d, 0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x6f, 0x70, 0x74, /* t = type(opt */
	0x73, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x29, 0x20, /* s.sortkeys)  */
	0x3d, 0x3d, 0x20, 0x27, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, /* == 'function */
	0x27, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x73, /* ' and opts.s */
	0x6f, 0x72, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x20, 0x6f, 0x72, 0x20, 0x66, /* ortkeys or f */
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x6b, 0x2c, 0x20, 0x6f, /* unction(k, o */
	0x2c, 0x20, 0x6e, 0x29, 0x20, 0x2d, 0x2d, 0x20, 0x6b, 0x3d, 0x6b, 0x65, /* , n) -- k=ke */
	0x79, 0x73, 0x2c, 0x20, 0x6f, 0x3d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, /* ys, o=origin */
	0x61, 0x6c, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2c, 0x20, 0x6e, 0x3d, 0x70, /* altable, n=p */
	0x61, 0x64, 0x64, 0x69, 0x6e, 0x67, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, /* adding.    l */
	0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6d, 0x61, 0x78, 0x6e, 0x2c, 0x20, 0x74, /* ocal maxn, t */
	0x6f, 0x20, 0x3d, 0x20, 0x74, 0x6f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, /* o = tonumber */
	0x28, 0x6e, 0x29, 0x20, 0x6f, 0x72, 0x20, 0x31, 0x32, 0x2c, 0x20, 0x7b, /* (n) or 12, { */
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x20, 0x3d, 0x20, 0x27, 0x61, 0x27, /* number = 'a' */
	0x2c, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x3d, 0x20, 0x27, /* , string = ' */
	0x62, 0x27, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, /* b'}.    loca */
	0x6c, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x70, /* l function p */
	0x61, 0x64, 0x6e, 0x75, 0x6d, 0x28, 0x64, 0x29, 0x20, 0x72, 0x65, 0x74, /* adnum(d) ret */
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x22, 0x25, 0x30, 0x22, 0x2e, 0x2e, 0x74, /* urn ("%0"..t */
	0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x6d, 0x61, 0x78, 0x6e, /* ostring(maxn */
	0x29, 0x2e, 0x2e, 0x22, 0x64, 0x22, 0x29, 0x3a, 0x66, 0x6f, 0x72, 0x6d, /* ).."d"):form */
	0x61, 0x74, 0x28, 0x74, 0x6f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x28, /* at(tonumber( */
	0x64, 0x29, 0x29, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, /* d)) end.     */
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x73, 0x6f, 0x72, 0x74, 0x28, 0x6b, /* table.sort(k */
	0x2c, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x61, /* , function(a */
	0x2c, 0x62, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x2d, 0x2d, /* ,b).      -- */
	0x20, 0x73, 0x6f, 0x72, 0x74, 0x20, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, /*  sort numeri */
	0x63, 0x20, 0x6b, 0x65, 0x79, 0x73, 0x20, 0x66, 0x69, 0x72, 0x73, 0x74, /* c keys first */
	0x3a, 0x20, 0x6b, 0x5b, 0x6b, 0x65, 0x79, 0x5d, 0x20, 0x69, 0x73, 0x20, /* : k[key] is  */
	0x6e, 0x6f, 0x74, 0x20, 0x6e, 0x69, 0x6c, 0x20, 0x66, 0x6f, 0x72, 0x20, /* not nil for  */
	0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x20, 0x6b, 0x65, /* numerical ke */
	0x79, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, /* ys.      ret */
	0x75, 0x72, 0x6e, 0x20, 0x28, 0x6b, 0x5b, 0x61, 0x5d, 0x20, 0x7e, 0x3d, /* urn (k[a] ~= */
	0x20, 0x6e, 0x69, 0x6c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x30, 0x20, 0x6f, /*  nil and 0 o */
	0x72, 0x20, 0x74, 0x6f, 0x5b, 0x74, 0x79, 0x70, 0x65, 0x28, 0x61, 0x29, /* r to[type(a) */
	0x5d, 0x20, 0x6f, 0x72, 0x20, 0x27, 0x7a, 0x27, 0x29, 0x2e, 0x2e, 0x28, /* ] or 'z')..( */
	0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x61, 0x29, 0x3a, /* tostring(a): */
	0x67, 0x73, 0x75, 0x62, 0x28, 0x22, 0x25, 0x64, 0x2b, 0x22, 0x2c, 0x70, /* gsub("%d+",p */
	0x61, 0x64, 0x6e, 0x75, 0x6d, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, /* adnum)).     */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x3c, 0x20, 0x28, 0x6b, 0x5b, /*        < (k[ */
	0x62, 0x5d, 0x20, 0x7e, 0x3d, 0x20, 0x6e, 0x69, 0x6c, 0x20, 0x61, 0x6e, /* b] ~= nil an */
	0x64, 0x20, 0x30, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x6f, 0x5b, 0x74, 0x79, /* d 0 or to[ty */
	0x70, 0x65, 0x28, 0x62, 0x29, 0x5d, 0x20, 0x6f, 0x72, 0x20, 0x27, 0x7a, /* pe(b)] or 'z */
	0x27, 0x29, 0x2e, 0x2e, 0x28, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, /* ')..(tostrin */
	0x67, 0x28, 0x62, 0x29, 0x3a, 0x67, 0x73, 0x75, 0x62, 0x28, 0x22, 0x25, /* g(b):gsub("% */
	0x64, 0x2b, 0x22, 0x2c, 0x70, 0x61, 0x64, 0x6e, 0x75, 0x6d, 0x29, 0x29, /* d+",padnum)) */
	0x20, 0x65, 0x6e, 0x64, 0x29, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, /*  end) end.   */
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, /* local functi */
	0x6f, 0x6e, 0x20, 0x76, 0x61, 0x6c, 0x32, 0x73, 0x74, 0x72, 0x28, 0x74, /* on val2str(t */
	0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x20, 0x69, 0x6e, 0x64, 0x65, /* , name, inde */
	0x6e, 0x74, 0x2c, 0x20, 0x69, 0x6e, 0x73, 0x72, 0x65, 0x66, 0x2c, 0x20, /* nt, insref,  */
	0x70, 0x61, 0x74, 0x68, 0x2c, 0x20, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x69, /* path, plaini */
	0x6e, 0x64, 0x65, 0x78, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, /* ndex, level) */
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, /* .    local t */
	0x74, 0x79, 0x70, 0x65, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2c, /* type, level, */
	0x20, 0x6d, 0x74, 0x20, 0x3d, 0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x74, /*  mt = type(t */
	0x29, 0x2c, 0x20, 0x28, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x6f, 0x72, /* ), (level or */
	0x20, 0x30, 0x29, 0x2c, 0x20, 0x67, 0x65, 0x74, 0x6d, 0x65, 0x74, 0x61, /*  0), getmeta */
	0x74, 0x61, 0x62, 0x6c, 0x65, 0x28, 0x74, 0x29, 0x0a, 0x20, 0x20, 0x20, /* table(t).    */
	0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, 0x70, 0x61, 0x74, 0x68, /*  local spath */
	0x2c, 0x20, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x20, 0x73, 0x61, /* , sname = sa */
	0x66, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x28, 0x70, 0x61, 0x74, 0x68, 0x2c, /* fename(path, */
	0x20, 0x6e, 0x61, 0x6d, 0x65, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6c, /*  name).    l */
	0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, 0x61, 0x67, 0x20, 0x3d, 0x20, 0x70, /* ocal tag = p */
	0x6c, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x61, 0x6e, /* lainindex an */
	0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x28, 0x74, 0x79, /* d.      ((ty */
	0x70, 0x65, 0x28, 0x6e, 0x61, 0x6d, 0x65, 0x29, 0x20, 0x3d, 0x3d, 0x20, /* pe(name) ==  */
	0x22, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x29, 0x20, 0x61, 0x6e, /* "number") an */
	0x64, 0x20, 0x27, 0x27, 0x20, 0x6f, 0x72, 0x20, 0x6e, 0x61, 0x6d, 0x65, /* d '' or name */
	0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x2e, 0x27, 0x3d, 0x27, /* ..space..'=' */
	0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x29, 0x20, 0x6f, 0x72, 0x0a, /* ..space) or. */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x28, 0x6e, 0x61, 0x6d, 0x65, 0x20, /*       (name  */
	0x7e, 0x3d, 0x20, 0x6e, 0x69, 0x6c, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x73, /* ~= nil and s */
	0x6e, 0x61, 0x6d, 0x65, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, /* name..space. */
	0x2e, 0x27, 0x3d, 0x27, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x20, /* .'='..space  */
	0x6f, 0x72, 0x20, 0x27, 0x27, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x69, /* or '').    i */
	0x66, 0x20, 0x73, 0x65, 0x65, 0x6e, 0x5b, 0x74, 0x5d, 0x20, 0x74, 0x68, /* f seen[t] th */
	0x65, 0x6e, 0x20, 0x2d, 0x2d, 0x20, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, /* en -- alread */
	0x79, 0x20, 0x73, 0x65, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, /* y seen this  */
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x0a, 0x20, 0x20, 0x20, 0x20, /* element.     */
	0x20, 0x20, 0x73, 0x72, 0x65, 0x66, 0x5b, 0x23, 0x73, 0x72, 0x65, 0x66, /*   sref[#sref */
	0x2b, 0x31, 0x5d, 0x20, 0x3d, 0x20, 0x73, 0x70, 0x61, 0x74, 0x68, 0x2e, /* +1] = spath. */
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x2e, 0x27, 0x3d, 0x27, 0x2e, /* .space..'='. */
	0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x2e, 0x73, 0x65, 0x65, 0x6e, /* .space..seen */
	0x5b, 0x74, 0x5d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, /* [t].      re */
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x61, 0x67, 0x2e, 0x2e, 0x27, 0x6e, /* turn tag..'n */
	0x69, 0x6c, 0x27, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, /* il'..comment */
	0x28, 0x27, 0x72, 0x65, 0x66, 0x27, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, /* ('ref', leve */
	0x6c, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, /* l).    end.  */
	0x20, 0x20, 0x20, 0x2d, 0x2d, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, /*    -- protec */
	0x74, 0x20, 0x66, 0x72, 0x6f, 0x6d, 0x20, 0x74, 0x68, 0x6f, 0x73, 0x65, /* t from those */
	0x20, 0x63, 0x61, 0x73, 0x65, 0x73, 0x20, 0x77, 0x68, 0x65, 0x72, 0x65, /*  cases where */
	0x20, 0x5f, 0x5f, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, /*  __tostring  */
	0x6d, 0x61, 0x79, 0x20, 0x66, 0x61, 0x69, 0x6c, 0x0a, 0x20, 0x20, 0x20, /* may fail.    */
	0x20, 0x69, 0x66, 0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x6d, 0x74, 0x29, /*  if type(mt) */
	0x20, 0x3d, 0x3d, 0x20, 0x27, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x27, 0x20, /*  == 'table'  */
	0x61, 0x6e, 0x64, 0x20, 0x6d, 0x65, 0x74, 0x61, 0x74, 0x6f, 0x73, 0x74, /* and metatost */
	0x72, 0x69, 0x6e, 0x67, 0x20, 0x7e, 0x3d, 0x20, 0x66, 0x61, 0x6c, 0x73, /* ring ~= fals */
	0x65, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, /* e then.      */
	0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, 0x6f, 0x2c, 0x20, 0x74, /*  local to, t */
	0x72, 0x20, 0x3d, 0x20, 0x70, 0x63, 0x61, 0x6c, 0x6c, 0x28, 0x66, 0x75, /* r = pcall(fu */
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x29, 0x20, 0x72, 0x65, 0x74, /* nction() ret */
	0x75, 0x72, 0x6e, 0x20, 0x6d, 0x74, 0x2e, 0x5f, 0x5f, 0x74, 0x6f, 0x73, /* urn mt.__tos */
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x28, 0x74, 0x29, 0x20, 0x65, 0x6e, 0x64, /* tring(t) end */
	0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, /* ).      loca */
	0x6c, 0x20, 0x73, 0x6f, 0x2c, 0x20, 0x73, 0x72, 0x20, 0x3d, 0x20, 0x70, /* l so, sr = p */
	0x63, 0x61, 0x6c, 0x6c, 0x28, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, /* call(functio */
	0x6e, 0x28, 0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x6d, /* n() return m */
	0x74, 0x2e, 0x5f, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, /* t.__serializ */
	0x65, 0x28, 0x74, 0x29, 0x20, 0x65, 0x6e, 0x64, 0x29, 0x0a, 0x20, 0x20, /* e(t) end).   */
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x28, 0x74, 0x6f, 0x20, 0x6f, /*     if (to o */
	0x72, 0x20, 0x73, 0x6f, 0x29, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x2d, /* r so) then - */
	0x2d, 0x20, 0x6b, 0x6e, 0x6f, 0x77, 0x73, 0x20, 0x68, 0x6f, 0x77, 0x20, /* - knows how  */
	0x74, 0x6f, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, /* to serialize */
	0x20, 0x69, 0x74, 0x73, 0x65, 0x6c, 0x66, 0x0a, 0x20, 0x20, 0x20, 0x20, /*  itself.     */
	0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x65, 0x6e, 0x5b, 0x74, 0x5d, 0x20, /*     seen[t]  */
	0x3d, 0x20, 0x69, 0x6e, 0x73, 0x72, 0x65, 0x66, 0x20, 0x6f, 0x72, 0x20, /* = insref or  */
	0x73, 0x70, 0x61, 0x74, 0x68, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* spath.       */
	0x20, 0x20, 0x74, 0x20, 0x3d, 0x20, 0x73, 0x6f, 0x20, 0x61, 0x6e, 0x64, /*   t = so and */
	0x20, 0x73, 0x72, 0x20, 0x6f, 0x72, 0x20, 0x74, 0x72, 0x0a, 0x20, 0x20, /*  sr or tr.   */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x74, 0x74, 0x79, 0x70, 0x65, 0x20, /*       ttype  */
	0x3d, 0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x74, 0x29, 0x0a, 0x20, 0x20, /* = type(t).   */
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x64, 0x20, 0x2d, 0x2d, 0x20, 0x6e, /*     end -- n */
	0x65, 0x77, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x66, 0x61, 0x6c, /* ew value fal */
	0x6c, 0x73, 0x20, 0x74, 0x68, 0x72, 0x6f, 0x75, 0x67, 0x68, 0x20, 0x74, /* ls through t */
	0x6f, 0x20, 0x62, 0x65, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, /* o be seriali */
	0x7a, 0x65, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x64, 0x0a, /* zed.    end. */
	0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x74, 0x74, 0x79, 0x70, 0x65, /*     if ttype */
	0x20, 0x3d, 0x3d, 0x20, 0x22, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x20, /*  == "table"  */
	0x74, 0x68, 0x65, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, /* then.      i */
	0x66, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x20, 0x3e, 0x3d, 0x20, 0x6d, /* f level >= m */
	0x61, 0x78, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x74, /* axl then ret */
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x61, 0x67, 0x2e, 0x2e, 0x27, 0x7b, 0x7d, /* urn tag..'{} */
	0x27, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x27, /* '..comment(' */
	0x6d, 0x61, 0x78, 0x6c, 0x76, 0x6c, 0x27, 0x2c, 0x20, 0x6c, 0x65, 0x76, /* maxlvl', lev */
	0x65, 0x6c, 0x29, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, /* el) end.     */
	0x20, 0x20, 0x73, 0x65, 0x65, 0x6e, 0x5b, 0x74, 0x5d, 0x20, 0x3d, 0x20, /*   seen[t] =  */
	0x69, 0x6e, 0x73, 0x72, 0x65, 0x66, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x70, /* insref or sp */
	0x61, 0x74, 0x68, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, /* ath.      if */
	0x20, 0x6e, 0x65, 0x78, 0x74, 0x28, 0x74, 0x29, 0x20, 0x3d, 0x3d, 0x20, /*  next(t) ==  */
	0x6e, 0x69, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x74, /* nil then ret */
	0x75, 0x72, 0x6e, 0x20, 0x74, 0x61, 0x67, 0x2e, 0x2e, 0x27, 0x7b, 0x7d, /* urn tag..'{} */
	0x27, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x74, /* '..comment(t */
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x20, 0x65, 0x6e, 0x64, /* , level) end */
	0x20, 0x2d, 0x2d, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x65, 0x6d, /*  -- table em */
	0x70, 0x74, 0x79, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, /* pty.      if */
	0x20, 0x6d, 0x61, 0x78, 0x6c, 0x65, 0x6e, 0x20, 0x61, 0x6e, 0x64, 0x20, /*  maxlen and  */
	0x6d, 0x61, 0x78, 0x6c, 0x65, 0x6e, 0x20, 0x3c, 0x20, 0x30, 0x20, 0x74, /* maxlen < 0 t */
	0x68, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, /* hen return t */
	0x61, 0x67, 0x2e, 0x2e, 0x27, 0x7b, 0x7d, 0x27, 0x2e, 0x2e, 0x63, 0x6f, /* ag..'{}'..co */
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x27, 0x6d, 0x61, 0x78, 0x6c, 0x65, /* mment('maxle */
	0x6e, 0x27, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x20, 0x65, /* n', level) e */
	0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, /* nd.      loc */
	0x61, 0x6c, 0x20, 0x6d, 0x61, 0x78, 0x6e, 0x2c, 0x20, 0x6f, 0x2c, 0x20, /* al maxn, o,  */
	0x6f, 0x75, 0x74, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x74, 0x68, 0x2e, 0x6d, /* out = math.m */
	0x69, 0x6e, 0x28, 0x23, 0x74, 0x2c, 0x20, 0x6d, 0x61, 0x78, 0x6e, 0x75, /* in(#t, maxnu */
	0x6d, 0x20, 0x6f, 0x72, 0x20, 0x23, 0x74, 0x29, 0x2c, 0x20, 0x7b, 0x7d, /* m or #t), {} */
	0x2c, 0x20, 0x7b, 0x7d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x66, /* , {}.      f */
	0x6f, 0x72, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x3d, 0x20, 0x31, 0x2c, 0x20, /* or key = 1,  */
	0x6d, 0x61, 0x78, 0x6e, 0x20, 0x64, 0x6f, 0x20, 0x6f, 0x5b, 0x6b, 0x65, /* maxn do o[ke */
	0x79, 0x5d, 0x20, 0x3d, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x65, 0x6e, 0x64, /* y] = key end */
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, /* .      if no */
	0x74, 0x20, 0x6d, 0x61, 0x78, 0x6e, 0x75, 0x6d, 0x20, 0x6f, 0x72, 0x20, /* t maxnum or  */
	0x23, 0x6f, 0x20, 0x3c, 0x20, 0x6d, 0x61, 0x78, 0x6e, 0x75, 0x6d, 0x20, /* #o < maxnum  */
	0x74, 0x68, 0x65, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* then.        */
	0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6e, 0x20, 0x3d, 0x20, 0x23, /*  local n = # */
	0x6f, 0x20, 0x2d, 0x2d, 0x20, 0x6e, 0x20, 0x3d, 0x20, 0x6e, 0x20, 0x2b, /* o -- n = n + */
	0x20, 0x31, 0x3b, 0x20, 0x6f, 0x5b, 0x6e, 0x5d, 0x20, 0x69, 0x73, 0x20, /*  1; o[n] is  */
	0x6d, 0x75, 0x63, 0x68, 0x20, 0x66, 0x61, 0x73, 0x74, 0x65, 0x72, 0x20, /* much faster  */
	0x74, 0x68, 0x61, 0x6e, 0x20, 0x6f, 0x5b, 0x23, 0x6f, 0x2b, 0x31, 0x5d, /* than o[#o+1] */
	0x20, 0x6f, 0x6e, 0x20, 0x6c, 0x61, 0x72, 0x67, 0x65, 0x20, 0x74, 0x61, /*  on large ta */
	0x62, 0x6c, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* bles.        */
	0x20, 0x66, 0x6f, 0x72, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x69, 0x6e, 0x20, /*  for key in  */
	0x70, 0x61, 0x69, 0x72, 0x73, 0x28, 0x74, 0x29, 0x20, 0x64, 0x6f, 0x0a, /* pairs(t) do. */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, /*           if */
	0x20, 0x6f, 0x5b, 0x6b, 0x65, 0x79, 0x5d, 0x20, 0x7e, 0x3d, 0x20, 0x6b, /*  o[key] ~= k */
	0x65, 0x79, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x6e, 0x20, 0x3d, 0x20, /* ey then n =  */
	0x6e, 0x20, 0x2b, 0x20, 0x31, 0x3b, 0x20, 0x6f, 0x5b, 0x6e, 0x5d, 0x20, /* n + 1; o[n]  */
	0x3d, 0x20, 0x6b, 0x65, 0x79, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, /* = key end.   */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, /*       end.   */
	0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, /*     end.     */
	0x20, 0x20, 0x69, 0x66, 0x20, 0x6d, 0x61, 0x78, 0x6e, 0x75, 0x6d, 0x20, /*   if maxnum  */
	0x61, 0x6e, 0x64, 0x20, 0x23, 0x6f, 0x20, 0x3e, 0x20, 0x6d, 0x61, 0x78, /* and #o > max */
	0x6e, 0x75, 0x6d, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x6f, 0x5b, 0x6d, /* num then o[m */
	0x61, 0x78, 0x6e, 0x75, 0x6d, 0x2b, 0x31, 0x5d, 0x20, 0x3d, 0x20, 0x6e, /* axnum+1] = n */
	0x69, 0x6c, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, /* il end.      */
	0x20, 0x69, 0x66, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x73, 0x6f, 0x72, /*  if opts.sor */
	0x74, 0x6b, 0x65, 0x79, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x23, 0x6f, /* tkeys and #o */
	0x20, 0x3e, 0x20, 0x6d, 0x61, 0x78, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x6e, /*  > maxn then */
	0x20, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x6e, 0x75, 0x6d, 0x73, 0x6f, 0x72, /*  alphanumsor */
	0x74, 0x28, 0x6f, 0x2c, 0x20, 0x74, 0x2c, 0x20, 0x6f, 0x70, 0x74, 0x73, /* t(o, t, opts */
	0x2e, 0x73, 0x6f, 0x72, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x29, 0x20, 0x65, /* .sortkeys) e */
	0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, /* nd.      loc */
	0x61, 0x6c, 0x20, 0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x20, 0x3d, 0x20, /* al sparse =  */
	0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x23, /* sparse and # */
	0x6f, 0x20, 0x3e, 0x20, 0x6d, 0x61, 0x78, 0x6e, 0x20, 0x2d, 0x2d, 0x20, /* o > maxn --  */
	0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x73, 0x70, 0x61, 0x72, /* disable spar */
	0x73, 0x6e, 0x65, 0x73, 0x73, 0x20, 0x69, 0x66, 0x20, 0x6f, 0x6e, 0x6c, /* sness if onl */
	0x79, 0x20, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x20, 0x6b, 0x65, /* y numeric ke */
	0x79, 0x73, 0x20, 0x28, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x65, 0x72, 0x20, /* ys (shorter  */
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, /* output).     */
	0x20, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6e, 0x2c, 0x20, 0x6b, 0x65, 0x79, /*   for n, key */
	0x20, 0x69, 0x6e, 0x20, 0x69, 0x70, 0x61, 0x69, 0x72, 0x73, 0x28, 0x6f, /*  in ipairs(o */
	0x29, 0x20, 0x64, 0x6f, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* ) do.        */
	0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, /*  local value */
	0x2c, 0x20, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x2c, 0x20, 0x70, 0x6c, 0x61, /* , ktype, pla */
	0x69, 0x6e, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x3d, 0x20, 0x74, 0x5b, /* inindex = t[ */
	0x6b, 0x65, 0x79, 0x5d, 0x2c, 0x20, 0x74, 0x79, 0x70, 0x65, 0x28, 0x6b, /* key], type(k */
	0x65, 0x79, 0x29, 0x2c, 0x20, 0x6e, 0x20, 0x3c, 0x3d, 0x20, 0x6d, 0x61, /* ey), n <= ma */
	0x78, 0x6e, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x73, /* xn and not s */
	0x70, 0x61, 0x72, 0x73, 0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* parse.       */
	0x20, 0x20, 0x69, 0x66, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x76, 0x61, /*   if opts.va */
	0x6c, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, /* lignore and  */
	0x6f, 0x70, 0x74, 0x73, 0x2e, 0x76, 0x61, 0x6c, 0x69, 0x67, 0x6e, 0x6f, /* opts.valigno */
	0x72, 0x65, 0x5b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5d, 0x20, 0x2d, 0x2d, /* re[value] -- */
	0x20, 0x73, 0x6b, 0x69, 0x70, 0x20, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, /*  skip ignore */
	0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x3b, 0x20, 0x64, 0x6f, /* d values; do */
	0x20, 0x6e, 0x6f, 0x74, 0x68, 0x69, 0x6e, 0x67, 0x0a, 0x20, 0x20, 0x20, /*  nothing.    */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x72, 0x20, 0x6f, 0x70, 0x74, 0x73, /*      or opts */
	0x2e, 0x6b, 0x65, 0x79, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x20, 0x61, 0x6e, /* .keyallow an */
	0x64, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x6b, /* d not opts.k */
	0x65, 0x79, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5b, 0x6b, 0x65, 0x79, 0x5d, /* eyallow[key] */
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x72, 0x20, /* .        or  */
	0x6f, 0x70, 0x74, 0x73, 0x2e, 0x6b, 0x65, 0x79, 0x69, 0x67, 0x6e, 0x6f, /* opts.keyigno */
	0x72, 0x65, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, /* re and opts. */
	0x6b, 0x65, 0x79, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5b, 0x6b, 0x65, /* keyignore[ke */
	0x79, 0x5d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6f, /* y].        o */
	0x72, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x76, 0x61, 0x6c, 0x74, 0x79, /* r opts.valty */
	0x70, 0x65, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x20, 0x61, 0x6e, 0x64, /* peignore and */
	0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x76, 0x61, 0x6c, 0x74, 0x79, 0x70, /*  opts.valtyp */
	0x65, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x5b, 0x74, 0x79, 0x70, 0x65, /* eignore[type */
	0x28, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x29, 0x5d, 0x20, 0x2d, 0x2d, 0x20, /* (value)] --  */
	0x73, 0x6b, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x20, 0x69, 0x67, 0x6e, /* skipping ign */
	0x6f, 0x72, 0x65, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x74, /* ored value t */
	0x79, 0x70, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* ypes.        */
	0x20, 0x6f, 0x72, 0x20, 0x73, 0x70, 0x61, 0x72, 0x73, 0x65, 0x20, 0x61, /*  or sparse a */
	0x6e, 0x64, 0x20, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x20, 0x3d, 0x3d, 0x20, /* nd value ==  */
	0x6e, 0x69, 0x6c, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x2d, 0x2d, 0x20, /* nil then --  */
	0x73, 0x6b, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x20, 0x6e, 0x69, 0x6c, /* skipping nil */
	0x73, 0x3b, 0x20, 0x64, 0x6f, 0x20, 0x6e, 0x6f, 0x74, 0x68, 0x69, 0x6e, /* s; do nothin */
	0x67, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, /* g.        el */
	0x73, 0x65, 0x69, 0x66, 0x20, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, /* seif ktype = */
	0x3d, 0x20, 0x27, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x27, 0x20, 0x6f, 0x72, /* = 'table' or */
	0x20, 0x6b, 0x74, 0x79, 0x70, 0x65, 0x20, 0x3d, 0x3d, 0x20, 0x27, 0x66, /*  ktype == 'f */
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x27, 0x20, 0x6f, 0x72, 0x20, /* unction' or  */
	0x62, 0x61, 0x64, 0x74, 0x79, 0x70, 0x65, 0x5b, 0x6b, 0x74, 0x79, 0x70, /* badtype[ktyp */
	0x65, 0x5d, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x0a, 0x20, 0x20, 0x20, 0x20, /* e] then.     */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, 0x74, /*       if not */
	0x20, 0x73, 0x65, 0x65, 0x6e, 0x5b, 0x6b, 0x65, 0x79, 0x5d, 0x20, 0x61, /*  seen[key] a */
	0x6e, 0x64, 0x20, 0x6e, 0x6f, 0x74, 0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, /* nd not globa */
	0x6c, 0x73, 0x5b, 0x6b, 0x65, 0x79, 0x5d, 0x20, 0x74, 0x68, 0x65, 0x6e, /* ls[key] then */
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* .            */
	0x20, 0x73, 0x72, 0x65, 0x66, 0x5b, 0x23, 0x73, 0x72, 0x65, 0x66, 0x2b, /*  sref[#sref+ */
	0x31, 0x5d, 0x20, 0x3d, 0x20, 0x27, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, /* 1] = 'placeh */
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, /* older'.      */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, /*        local */
	0x20, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, 0x20, 0x73, 0x61, 0x66, /*  sname = saf */
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x28, 0x69, 0x6e, 0x61, 0x6d, 0x65, 0x2c, /* ename(iname, */
	0x20, 0x67, 0x65, 0x6e, 0x73, 0x79, 0x6d, 0x28, 0x6b, 0x65, 0x79, 0x29, /*  gensym(key) */
	0x29, 0x20, 0x2d, 0x2d, 0x20, 0x69, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x69, /* ) -- iname i */
	0x73, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x20, 0x66, 0x6f, 0x72, 0x20, /* s table for  */
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, /* local variab */
	0x6c, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* les.         */
	0x20, 0x20, 0x20, 0x20, 0x73, 0x72, 0x65, 0x66, 0x5b, 0x23, 0x73, 0x72, /*     sref[#sr */
	0x65, 0x66, 0x5d, 0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x32, 0x73, 0x74, /* ef] = val2st */
	0x72, 0x28, 0x6b, 0x65, 0x79, 0x2c, 0x73, 0x6e, 0x61, 0x6d, 0x65, 0x2c, /* r(key,sname, */
	0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x2c, 0x73, 0x6e, 0x61, 0x6d, 0x65, /* indent,sname */
	0x2c, 0x69, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x74, 0x72, 0x75, 0x65, 0x29, /* ,iname,true) */
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, /* .          e */
	0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* nd.          */
	0x20, 0x73, 0x72, 0x65, 0x66, 0x5b, 0x23, 0x73, 0x72, 0x65, 0x66, 0x2b, /*  sref[#sref+ */
	0x31, 0x5d, 0x20, 0x3d, 0x20, 0x27, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, /* 1] = 'placeh */
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, /* older'.      */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x70, /*      local p */
	0x61, 0x74, 0x68, 0x20, 0x3d, 0x20, 0x73, 0x65, 0x65, 0x6e, 0x5b, 0x74, /* ath = seen[t */
	0x5d, 0x2e, 0x2e, 0x27, 0x5b, 0x27, 0x2e, 0x2e, 0x74, 0x6f, 0x73, 0x74, /* ]..'['..tost */
	0x72, 0x69, 0x6e, 0x67, 0x28, 0x73, 0x65, 0x65, 0x6e, 0x5b, 0x6b, 0x65, /* ring(seen[ke */
	0x79, 0x5d, 0x20, 0x6f, 0x72, 0x20, 0x67, 0x6c, 0x6f, 0x62, 0x61, 0x6c, /* y] or global */
	0x73, 0x5b, 0x6b, 0x65, 0x79, 0x5d, 0x20, 0x6f, 0x72, 0x20, 0x67, 0x65, /* s[key] or ge */
	0x6e, 0x73, 0x79, 0x6d, 0x28, 0x6b, 0x65, 0x79, 0x29, 0x29, 0x2e, 0x2e, /* nsym(key)).. */
	0x27, 0x5d, 0x27, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* ']'.         */
	0x20, 0x20, 0x73, 0x72, 0x65, 0x66, 0x5b, 0x23, 0x73, 0x72, 0x65, 0x66, /*   sref[#sref */
	0x5d, 0x20, 0x3d, 0x20, 0x70, 0x61, 0x74, 0x68, 0x2e, 0x2e, 0x73, 0x70, /* ] = path..sp */
	0x61, 0x63, 0x65, 0x2e, 0x2e, 0x27, 0x3d, 0x27, 0x2e, 0x2e, 0x73, 0x70, /* ace..'='..sp */
	0x61, 0x63, 0x65, 0x2e, 0x2e, 0x74, 0x6f, 0x73, 0x74, 0x72, 0x69, 0x6e, /* ace..tostrin */
	0x67, 0x28, 0x73, 0x65, 0x65, 0x6e, 0x5b, 0x76, 0x61, 0x6c, 0x75, 0x65, /* g(seen[value */
	0x5d, 0x20, 0x6f, 0x72, 0x20, 0x76, 0x61, 0x6c, 0x32, 0x73, 0x74, 0x72, /* ] or val2str */
	0x28, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x2c, 0x6e, 0x69, 0x6c, 0x2c, 0x69, /* (value,nil,i */
	0x6e, 0x64, 0x65, 0x6e, 0x74, 0x2c, 0x70, 0x61, 0x74, 0x68, 0x29, 0x29, /* ndent,path)) */
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, 0x73, /* .        els */
	0x65, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* e.           */
	0x6f, 0x75, 0x74, 0x5b, 0x23, 0x6f, 0x75, 0x74, 0x2b, 0x31, 0x5d, 0x20, /* out[#out+1]  */
	0x3d, 0x20, 0x76, 0x61, 0x6c, 0x32, 0x73, 0x74, 0x72, 0x28, 0x76, 0x61, /* = val2str(va */
	0x6c, 0x75, 0x65, 0x2c, 0x6b, 0x65, 0x79, 0x2c, 0x69, 0x6e, 0x64, 0x65, /* lue,key,inde */
	0x6e, 0x74, 0x2c, 0x6e, 0x69, 0x6c, 0x2c, 0x73, 0x65, 0x65, 0x6e, 0x5b, /* nt,nil,seen[ */
	0x74, 0x5d, 0x2c, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x64, 0x65, /* t],plaininde */
	0x78, 0x2c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x2b, 0x31, 0x29, 0x0a, 0x20, /* x,level+1).  */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, /*          if  */
	0x6d, 0x61, 0x78, 0x6c, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x0a, /* maxlen then. */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /*              */
	0x6d, 0x61, 0x78, 0x6c, 0x65, 0x6e, 0x20, 0x3d, 0x20, 0x6d, 0x61, 0x78, /* maxlen = max */
	0x6c, 0x65, 0x6e, 0x20, 0x2d, 0x20, 0x23, 0x6f, 0x75, 0x74, 0x5b, 0x23, /* len - #out[# */
	0x6f, 0x75, 0x74, 0x5d, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* out].        */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x69, 0x66, 0x20, 0x6d, 0x61, 0x78, 0x6c, /*      if maxl */
	0x65, 0x6e, 0x20, 0x3c, 0x20, 0x30, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, /* en < 0 then  */
	0x62, 0x72, 0x65, 0x61, 0x6b, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, /* break end.   */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x64, 0x0a, /*         end. */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x64, 0x0a, /*         end. */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, /*       end.   */
	0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x70, 0x72, /*     local pr */
	0x65, 0x66, 0x69, 0x78, 0x20, 0x3d, 0x20, 0x73, 0x74, 0x72, 0x69, 0x6e, /* efix = strin */
	0x67, 0x2e, 0x72, 0x65, 0x70, 0x28, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, /* g.rep(indent */
	0x20, 0x6f, 0x72, 0x20, 0x27, 0x27, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, /*  or '', leve */
	0x6c, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, /* l).      loc */
	0x61, 0x6c, 0x20, 0x68, 0x65, 0x61, 0x64, 0x20, 0x3d, 0x20, 0x69, 0x6e, /* al head = in */
	0x64, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x27, 0x7b, 0x5c, /* dent and '{\ */
	0x6e, 0x27, 0x2e, 0x2e, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x2e, 0x2e, /* n'..prefix.. */
	0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x27, 0x7b, /* indent or '{ */
	0x27, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, /* '.      loca */
	0x6c, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x20, 0x3d, 0x20, 0x74, 0x61, 0x62, /* l body = tab */
	0x6c, 0x65, 0x2e, 0x63, 0x6f, 0x6e, 0x63, 0x61, 0x74, 0x28, 0x6f, 0x75, /* le.concat(ou */
	0x74, 0x2c, 0x20, 0x27, 0x2c, 0x27, 0x2e, 0x2e, 0x28, 0x69, 0x6e, 0x64, /* t, ','..(ind */
	0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x27, 0x5c, 0x6e, 0x27, /* ent and '\n' */
	0x2e, 0x2e, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x2e, 0x2e, 0x69, 0x6e, /* ..prefix..in */
	0x64, 0x65, 0x6e, 0x74, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x70, 0x61, 0x63, /* dent or spac */
	0x65, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, /* e)).      lo */
	0x63, 0x61, 0x6c, 0x20, 0x74, 0x61, 0x69, 0x6c, 0x20, 0x3d, 0x20, 0x69, /* cal tail = i */
	0x6e, 0x64, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, 0x20, 0x22, 0x5c, /* ndent and "\ */
	0x6e, 0x22, 0x2e, 0x2e, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x2e, 0x2e, /* n"..prefix.. */
	0x27, 0x7d, 0x27, 0x20, 0x6f, 0x72, 0x20, 0x27, 0x7d, 0x27, 0x0a, 0x20, /* '}' or '}'.  */
	0x20, 0x20, 0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, /*      return  */
	0x28, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x20, 0x61, 0x6e, 0x64, 0x20, /* (custom and  */
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x28, 0x74, 0x61, 0x67, 0x2c, 0x68, /* custom(tag,h */
	0x65, 0x61, 0x64, 0x2c, 0x62, 0x6f, 0x64, 0x79, 0x2c, 0x74, 0x61, 0x69, /* ead,body,tai */
	0x6c, 0x2c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x20, 0x6f, 0x72, 0x20, /* l,level) or  */
	0x74, 0x61, 0x67, 0x2e, 0x2e, 0x68, 0x65, 0x61, 0x64, 0x2e, 0x2e, 0x62, /* tag..head..b */
	0x6f, 0x64, 0x79, 0x2e, 0x2e, 0x74, 0x61, 0x69, 0x6c, 0x29, 0x2e, 0x2e, /* ody..tail).. */
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x74, 0x2c, 0x20, 0x6c, /* comment(t, l */
	0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, 0x6c, /* evel).    el */
	0x73, 0x65, 0x69, 0x66, 0x20, 0x62, 0x61, 0x64, 0x74, 0x79, 0x70, 0x65, /* seif badtype */
	0x5b, 0x74, 0x74, 0x79, 0x70, 0x65, 0x5d, 0x20, 0x74, 0x68, 0x65, 0x6e, /* [ttype] then */
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x73, 0x65, 0x65, 0x6e, 0x5b, /* .      seen[ */
	0x74, 0x5d, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x73, 0x72, 0x65, 0x66, 0x20, /* t] = insref  */
	0x6f, 0x72, 0x20, 0x73, 0x70, 0x61, 0x74, 0x68, 0x0a, 0x20, 0x20, 0x20, /* or spath.    */
	0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x61, /*    return ta */
	0x67, 0x2e, 0x2e, 0x67, 0x6c, 0x6f, 0x62, 0x65, 0x72, 0x72, 0x28, 0x74, /* g..globerr(t */
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x20, 0x20, 0x20, /* , level).    */
	0x20, 0x65, 0x6c, 0x73, 0x65, 0x69, 0x66, 0x20, 0x74, 0x74, 0x79, 0x70, /*  elseif ttyp */
	0x65, 0x20, 0x3d, 0x3d, 0x20, 0x27, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, /* e == 'functi */
	0x6f, 0x6e, 0x27, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x0a, 0x20, 0x20, 0x20, /* on' then.    */
	0x20, 0x20, 0x20, 0x73, 0x65, 0x65, 0x6e, 0x5b, 0x74, 0x5d, 0x20, 0x3d, /*    seen[t] = */
	0x20, 0x69, 0x6e, 0x73, 0x72, 0x65, 0x66, 0x20, 0x6f, 0x72, 0x20, 0x73, /*  insref or s */
	0x70, 0x61, 0x74, 0x68, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x69, /* path.      i */
	0x66, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x2e, 0x6e, 0x6f, 0x63, 0x6f, 0x64, /* f opts.nocod */
	0x65, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, /* e then retur */
	0x6e, 0x20, 0x74, 0x61, 0x67, 0x2e, 0x2e, 0x22, 0x66, 0x75, 0x6e, 0x63, /* n tag.."func */
	0x74, 0x69, 0x6f, 0x6e, 0x28, 0x29, 0x20, 0x2d, 0x2d, 0x5b, 0x5b, 0x2e, /* tion() --[[. */
	0x2e, 0x73, 0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x2e, 0x2e, 0x5d, 0x5d, /* .skipped..]] */
	0x20, 0x65, 0x6e, 0x64, 0x22, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, /*  end"..comme */
	0x6e, 0x74, 0x28, 0x74, 0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, /* nt(t, level) */
	0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, /*  end.      l */
	0x6f, 0x63, 0x61, 0x6c, 0x20, 0x6f, 0x6b, 0x2c, 0x20, 0x72, 0x65, 0x73, /* ocal ok, res */
	0x20, 0x3d, 0x20, 0x70, 0x63, 0x61, 0x6c, 0x6c, 0x28, 0x73, 0x74, 0x72, /*  = pcall(str */
	0x69, 0x6e, 0x67, 0x2e, 0x64, 0x75, 0x6d, 0x70, 0x2c, 0x20, 0x74, 0x29, /* ing.dump, t) */
	0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, /* .      local */
	0x20, 0x66, 0x75, 0x6e, 0x63, 0x20, 0x3d, 0x20, 0x6f, 0x6b, 0x20, 0x61, /*  func = ok a */
	0x6e, 0x64, 0x20, 0x22, 0x28, 0x28, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x74, /* nd "((loadst */
	0x72, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x72, 0x20, 0x6c, 0x6f, 0x61, 0x64, /* ring or load */
	0x29, 0x28, 0x22, 0x2e, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x73, 0x74, 0x72, /* )("..safestr */
	0x28, 0x72, 0x65, 0x73, 0x29, 0x2e, 0x2e, 0x22, 0x2c, 0x27, 0x40, 0x73, /* (res)..",'@s */
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x27, 0x29, 0x29, /* erialized')) */
	0x22, 0x2e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x28, 0x74, /* "..comment(t */
	0x2c, 0x20, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x29, 0x0a, 0x20, 0x20, 0x20, /* , level).    */
	0x20, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x61, /*    return ta */
	0x67, 0x2e, 0x2e, 0x28, 0x66, 0x75, 0x6e, 0x63, 0x20, 0x6f, 0x72, 0x20, /* g..(func or  */
	0x67, 0x6c, 0x6f, 0x62, 0x65, 0x72, 0x72, 0x28, 0x74, 0x2c, 0x20, 0x6c, /* globerr(t, l */
	0x65, 0x76, 0x65, 0x6c, 0x29, 0x29, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x65, /* evel)).    e */
	0x6c, 0x73, 0x65, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, /* lse return t */
	0x61, 0x67, 0x2e, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x73, 0x74, 0x72, 0x28, /* ag..safestr( */
	0x74, 0x29, 0x20, 0x65, 0x6e, 0x64, 0x20, 0x2d, 0x2d, 0x20, 0x68, 0x61, /* t) end -- ha */
	0x6e, 0x64, 0x6c, 0x65, 0x20, 0x61, 0x6c, 0x6c, 0x20, 0x6f, 0x74, 0x68, /* ndle all oth */
	0x65, 0x72, 0x20, 0x74, 0x79, 0x70, 0x65, 0x73, 0x0a, 0x20, 0x20, 0x65, /* er types.  e */
	0x6e, 0x64, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x73, /* nd.  local s */
	0x65, 0x70, 0x72, 0x20, 0x3d, 0x20, 0x69, 0x6e, 0x64, 0x65, 0x6e, 0x74, /* epr = indent */
	0x20, 0x61, 0x6e, 0x64, 0x20, 0x22, 0x5c, 0x6e, 0x22, 0x20, 0x6f, 0x72, /*  and "\n" or */
	0x20, 0x22, 0x3b, 0x22, 0x2e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x0a, /*  ";"..space. */
	0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x62, 0x6f, 0x64, 0x79, /*   local body */
	0x20, 0x3d, 0x20, 0x76, 0x61, 0x6c, 0x32, 0x73, 0x74, 0x72, 0x28, 0x74, /*  = val2str(t */
	0x2c, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x2c, 0x20, 0x69, 0x6e, 0x64, 0x65, /* , name, inde */
	0x6e, 0x74, 0x29, 0x20, 0x2d, 0x2d, 0x20, 0x74, 0x68, 0x69, 0x73, 0x20, /* nt) -- this  */
	0x63, 0x61, 0x6c, 0x6c, 0x20, 0x61, 0x6c, 0x73, 0x6f, 0x20, 0x70, 0x6f, /* call also po */
	0x70, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x20, 0x73, 0x72, 0x65, 0x66, /* pulates sref */
	0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x74, 0x61, 0x69, /* .  local tai */
	0x6c, 0x20, 0x3d, 0x20, 0x23, 0x73, 0x72, 0x65, 0x66, 0x3e, 0x31, 0x20, /* l = #sref>1  */
	0x61, 0x6e, 0x64, 0x20, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x2e, 0x63, 0x6f, /* and table.co */
	0x6e, 0x63, 0x61, 0x74, 0x28, 0x73, 0x72, 0x65, 0x66, 0x2c, 0x20, 0x73, /* ncat(sref, s */
	0x65, 0x70, 0x72, 0x29, 0x2e, 0x2e, 0x73, 0x65, 0x70, 0x72, 0x20, 0x6f, /* epr)..sepr o */
	0x72, 0x20, 0x27, 0x27, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, /* r ''.  local */
	0x20, 0x77, 0x61, 0x72, 0x6e, 0x20, 0x3d, 0x20, 0x6f, 0x70, 0x74, 0x73, /*  warn = opts */
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x61, 0x6e, 0x64, /* .comment and */
	0x20, 0x23, 0x73, 0x72, 0x65, 0x66, 0x3e, 0x31, 0x20, 0x61, 0x6e, 0x64, /*  #sref>1 and */
	0x20, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x2e, 0x22, 0x2d, 0x2d, 0x5b, /*  space.."--[ */
	0x5b, 0x69, 0x6e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x20, /* [incomplete  */
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x20, 0x77, 0x69, 0x74, 0x68, 0x20, /* output with  */
	0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x73, 0x65, 0x6c, 0x66, 0x2d, /* shared/self- */
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x20, 0x73, /* references s */
	0x6b, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5d, 0x5d, 0x22, 0x20, 0x6f, 0x72, /* kipped]]" or */
	0x20, 0x27, 0x27, 0x0a, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, /*  ''.  return */
	0x20, 0x6e, 0x6f, 0x74, 0x20, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x61, 0x6e, /*  not name an */
	0x64, 0x20, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x2e, 0x77, 0x61, 0x72, 0x6e, /* d body..warn */
	0x20, 0x6f, 0x72, 0x20, 0x22, 0x64, 0x6f, 0x20, 0x6c, 0x6f, 0x63, 0x61, /*  or "do loca */
	0x6c, 0x20, 0x22, 0x2e, 0x2e, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x2e, 0x73, /* l "..body..s */
	0x65, 0x70, 0x72, 0x2e, 0x2e, 0x74, 0x61, 0x69, 0x6c, 0x2e, 0x2e, 0x22, /* epr..tail.." */
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x22, 0x2e, 0x2e, 0x6e, 0x61, /* return "..na */
	0x6d, 0x65, 0x2e, 0x2e, 0x73, 0x65, 0x70, 0x72, 0x2e, 0x2e, 0x22, 0x65, /* me..sepr.."e */
	0x6e, 0x64, 0x22, 0x0a, 0x65, 0x6e, 0x64, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, /* nd".end..loc */
	0x61, 0x6c, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, /* al function  */
	0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x28, /* deserialize( */
	0x64, 0x61, 0x74, 0x61, 0x2c, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x29, 0x0a, /* data, opts). */
	0x20, 0x20, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x65, 0x6e, 0x76, 0x20, /*   local env  */
	0x3d, 0x20, 0x28, 0x6f, 0x70, 0x74, 0x73, 0x20, 0x61, 0x6e, 0x64, 0x20, /* = (opts and  */
	0x6f, 0x70, 0x74, 0x73, 0x2e, 0x73, 0x61, 0x66, 0x65, 0x20, 0x3d, 0x3d, /* opts.safe == */
	0x20, 0x66, 0x61, 0x6c, 0x73, 0x65, 0x29, 0x20, 0x61, 0x6e, 0x64, 0x20, /*  false) and  */
	0x47, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x6f, 0x72, 0x20, 0x73, 0x65, 0x74, /* G.    or set */
	0x6d, 0x65, 0x74, 0x61, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x28, 0x7b, 0x7d, /* metatable({} */
	0x2c, 0x20, 0x7b, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, /* , {.         */
	0x5f, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x20, 0x3d, 0x20, 0x66, 0x75, /* __index = fu */
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x74, 0x2c, 0x6b, 0x29, 0x20, /* nction(t,k)  */
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x74, 0x20, 0x65, 0x6e, 0x64, /* return t end */
	0x2c, 0x0a, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x5f, 0x5f, /* ,.        __ */
	0x63, 0x61, 0x6c, 0x6c, 0x20, 0x3d, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, /* call = funct */
	0x69, 0x6f, 0x6e, 0x28, 0x74, 0x2c, 0x2e, 0x2e, 0x2e, 0x29, 0x20, 0x65, /* ion(t,...) e */
	0x72, 0x72, 0x6f, 0x72, 0x28, 0x22, 0x63, 0x61, 0x6e, 0x6e, 0x6f, 0x74, /* rror("cannot */
	0x20, 0x63, 0x61, 0x6c, 0x6c, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, /*  call functi */
	0x6f, 0x6e, 0x73, 0x22, 0x29, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, /* ons") end.   */
	0x20, 0x20, 0x20, 0x20, 0x7d, 0x29, 0x0a, 0x20, 0x20, 0x6c, 0x6f, 0x63, /*     }).  loc */
	0x61, 0x6c, 0x20, 0x66, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, /* al f, res =  */
	0x28, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, /* (loadstring  */
	0x6f, 0x72, 0x20, 0x6c, 0x6f, 0x61, 0x64, 0x29, 0x28, 0x27, 0x72, 0x65, /* or load)('re */
	0x74, 0x75, 0x72, 0x6e, 0x20, 0x27, 0x2e, 0x2e, 0x64, 0x61, 0x74, 0x61, /* turn '..data */
	0x2c, 0x20, 0x6e, 0x69, 0x6c, 0x2c, 0x20, 0x6e, 0x69, 0x6c, 0x2c, 0x20, /* , nil, nil,  */
	0x65, 0x6e, 0x76, 0x29, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, /* env).  if no */
	0x74, 0x20, 0x66, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x66, 0x2c, 0x20, /* t f then f,  */
	0x72, 0x65, 0x73, 0x20, 0x3d, 0x20, 0x28, 0x6c, 0x6f, 0x61, 0x64, 0x73, /* res = (loads */
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x20, 0x6f, 0x72, 0x20, 0x6c, 0x6f, 0x61, /* tring or loa */
	0x64, 0x29, 0x28, 0x64, 0x61, 0x74, 0x61, 0x2c, 0x20, 0x6e, 0x69, 0x6c, /* d)(data, nil */
	0x2c, 0x20, 0x6e, 0x69, 0x6c, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x29, 0x20, /* , nil, env)  */
	0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x6e, 0x6f, 0x74, /* end.  if not */
	0x20, 0x66, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x72, 0x65, 0x74, 0x75, /*  f then retu */
	0x72, 0x6e, 0x20, 0x66, 0x2c, 0x20, 0x72, 0x65, 0x73, 0x20, 0x65, 0x6e, /* rn f, res en */
	0x64, 0x0a, 0x20, 0x20, 0x69, 0x66, 0x20, 0x73, 0x65, 0x74, 0x66, 0x65, /* d.  if setfe */
	0x6e, 0x76, 0x20, 0x74, 0x68, 0x65, 0x6e, 0x20, 0x73, 0x65, 0x74, 0x66, /* nv then setf */
	0x65, 0x6e, 0x76, 0x28, 0x66, 0x2c, 0x20, 0x65, 0x6e, 0x76, 0x29, 0x20, /* env(f, env)  */
	0x65, 0x6e, 0x64, 0x0a, 0x20, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, /* end.  return */
	0x20, 0x70, 0x63, 0x61, 0x6c, 0x6c, 0x28, 0x66, 0x29, 0x0a, 0x65, 0x6e, /*  pcall(f).en */
	0x64, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x20, 0x66, 0x75, 0x6e, /* d..local fun */
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x28, /* ction merge( */
	0x61, 0x2c, 0x20, 0x62, 0x29, 0x20, 0x69, 0x66, 0x20, 0x62, 0x20, 0x74, /* a, b) if b t */
	0x68, 0x65, 0x6e, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6b, 0x2c, 0x76, 0x20, /* hen for k,v  */
	0x69, 0x6e, 0x20, 0x70, 0x61, 0x69, 0x72, 0x73, 0x28, 0x62, 0x29, 0x20, /* in pairs(b)  */
	0x64, 0x6f, 0x20, 0x61, 0x5b, 0x6b, 0x5d, 0x20, 0x3d, 0x20, 0x76, 0x20, /* do a[k] = v  */
	0x65, 0x6e, 0x64, 0x20, 0x65, 0x6e, 0x64, 0x3b, 0x20, 0x72, 0x65, 0x74, /* end end; ret */
	0x75, 0x72, 0x6e, 0x20, 0x61, 0x3b, 0x20, 0x65, 0x6e, 0x64, 0x0a, 0x72, /* urn a; end.r */
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x7b, 0x20, 0x5f, 0x4e, 0x41, 0x4d, /* eturn { _NAM */
	0x45, 0x20, 0x3d, 0x20, 0x6e, 0x2c, 0x20, 0x5f, 0x43, 0x4f, 0x50, 0x59, /* E = n, _COPY */
	0x52, 0x49, 0x47, 0x48, 0x54, 0x20, 0x3d, 0x20, 0x63, 0x2c, 0x20, 0x5f, /* RIGHT = c, _ */
	0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x20, /* DESCRIPTION  */
	0x3d, 0x20, 0x64, 0x2c, 0x20, 0x5f, 0x56, 0x45, 0x52, 0x53, 0x49, 0x4f, /* = d, _VERSIO */
	0x4e, 0x20, 0x3d, 0x20, 0x76, 0x2c, 0x20, 0x73, 0x65, 0x72, 0x69, 0x61, /* N = v, seria */
	0x6c, 0x69, 0x7a, 0x65, 0x20, 0x3d, 0x20, 0x73, 0x2c, 0x0a, 0x20, 0x20, /* lize = s,.   */
	0x6c, 0x6f, 0x61, 0x64, 0x20, 0x3d, 0x20, 0x64, 0x65, 0x73, 0x65, 0x72, /* load = deser */
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x2c, 0x0a, 0x20, 0x20, 0x64, 0x75, /* ialize,.  du */
	0x6d, 0x70, 0x20, 0x3d, 0x20, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, /* mp = functio */
	0x6e, 0x28, 0x61, 0x2c, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x29, 0x20, 0x72, /* n(a, opts) r */
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x28, 0x61, 0x2c, 0x20, 0x6d, /* eturn s(a, m */
	0x65, 0x72, 0x67, 0x65, 0x28, 0x7b, 0x6e, 0x61, 0x6d, 0x65, 0x20, 0x3d, /* erge({name = */
	0x20, 0x27, 0x5f, 0x27, 0x2c, 0x20, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x63, /*  '_', compac */
	0x74, 0x20, 0x3d, 0x20, 0x74, 0x72, 0x75, 0x65, 0x2c, 0x20, 0x73, 0x70, /* t = true, sp */
	0x61, 0x72, 0x73, 0x65, 0x20, 0x3d, 0x20, 0x74, 0x72, 0x75, 0x65, 0x7d, /* arse = true} */
	0x2c, 0x20, 0x6f, 0x70, 0x74, 0x73, 0x29, 0x29, 0x20, 0x65, 0x6e, 0x64, /* , opts)) end */
	0x2c, 0x0a, 0x20, 0x20, 0x6c, 0x69, 0x6e, 0x65, 0x20, 0x3d, 0x20, 0x66, /* ,.  line = f */
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x28, 0x61, 0x2c, 0x20, 0x6f, /* unction(a, o */
	0x70, 0x74, 0x73, 0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, /* pts) return  */
	0x73, 0x28, 0x61, 0x2c, 0x20, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x28, 0x7b, /* s(a, merge({ */
	0x73, 0x6f, 0x72, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x20, 0x3d, 0x20, 0x74, /* sortkeys = t */
	0x72, 0x75, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, /* rue, comment */
	0x20, 0x3d, 0x20, 0x74, 0x72, 0x75, 0x65, 0x7d, 0x2c, 0x20, 0x6f, 0x70, /*  = true}, op */
	0x74, 0x73, 0x29, 0x29, 0x20, 0x65, 0x6e, 0x64, 0x2c, 0x0a, 0x20, 0x20, /* ts)) end,.   */
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x20, 0x3d, 0x20, 0x66, 0x75, 0x6e, 0x63, /* block = func */
	0x74, 0x69, 0x6f, 0x6e, 0x28, 0x61, 0x2c, 0x20, 0x6f, 0x70, 0x74, 0x73, /* tion(a, opts */
	0x29, 0x20, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x20, 0x73, 0x28, 0x61, /* ) return s(a */
	0x2c, 0x20, 0x6d, 0x65, 0x72, 0x67, 0x65, 0x28, 0x7b, 0x69, 0x6e, 0x64, /* , merge({ind */
	0x65, 0x6e, 0x74, 0x20, 0x3d, 0x20, 0x27, 0x20, 0x20, 0x27, 0x2c, 0x20, /* ent = '  ',  */
	0x73, 0x6f, 0x72, 0x74, 0x6b, 0x65, 0x79, 0x73, 0x20, 0x3d, 0x20, 0x74, /* sortkeys = t */
	0x72, 0x75, 0x65, 0x2c, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, /* rue, comment */
	0x20, 0x3d, 0x20, 0x74, 0x72, 0x75, 0x65, 0x7d, 0x2c, 0x20, 0x6f, 0x70, /*  = true}, op */
	0x74, 0x73, 0x29, 0x29, 0x20, 0x65, 0x6e, 0x64, 0x20, 0x7d, 0x0a, 0     /* ts)) end }. */
};

#endif /* SERPENT_LUA_H */
